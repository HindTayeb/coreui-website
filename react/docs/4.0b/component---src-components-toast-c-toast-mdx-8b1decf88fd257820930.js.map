{"version":3,"sources":["webpack:///../src/components/toast/CToast.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","useState","useRef","Playground","Props","CButton","CToast","CToaster","title","autohide","toast","addToast","toaster","onClick","ref","push","placement","isMDXComponent"],"mappings":"wSAaaA,G,UAAe,S,iNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,mPACA,kBACE,GAAM,YADR,YAGA,oEACA,sBACE,kBAAIC,WAAW,MAAf,iDAAsE,sBAAQA,WAAW,MAAnB,qCAAtE,KACA,kBAAIA,WAAW,MAAf,wDAA6E,0BAAYA,WAAW,MAAvB,mBAA7E,MAEF,kBACE,GAAM,YADR,YAGA,kBACE,GAAM,SADR,SAGA,0HAAyG,0BAAYA,WAAW,KAAvB,iBAAzG,oFACA,sNACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,4IAA+IC,SAAO,GACvLL,QACAH,kBACAS,oBACAC,gBACAC,eACAC,UACAC,YACAC,WACAC,cATuL,gBAUvLf,IAVuL,EAWvLH,eAXuL,GAYtLO,QAAQ,cACb,YAAC,IAAD,CAAUA,QAAQ,YAChB,YAAC,IAAD,CAAQY,MAAM,sBAAsBC,UAAU,EAAOb,QAAQ,UAA7D,4CAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,gSAAmSC,SAAO,GAC3UL,QACAH,kBACAS,oBACAC,gBACAC,eACAC,UACAC,YACAC,WACAC,cAT2U,gBAU3Uf,IAV2U,EAW3UH,eAX2U,GAY1UO,QAAQ,eACZ,WAAM,MACyBK,mBAAS,GAA5BS,EADN,KACaC,EADb,KAEKC,EAAUV,mBAChB,OAAO,4BACP,YAAC,IAAD,CAASW,QAAS,kBAAMF,EAAS,CAC7B,MAAS,UACPf,QAAQ,WAFd,gBAGA,YAAC,IAAD,CAAUkB,IAAKF,EAASG,KAAML,EAAOM,UAAU,YAAYpB,QAAQ,iBAIvE,iC,+MAKJH,EAAWwB,gBAAiB","file":"component---src-components-toast-c-toast-mdx-8b1decf88fd257820930.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/lukaszholeczek/CoreUI/@coreui/react-v4/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState, useRef } from 'react';\nimport { Playground, Props } from 'docz';\nimport { CButton } from '../button/CButton.tsx';\nimport { CToast } from './CToast.tsx';\nimport { CToaster } from './CToaster.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`React toasts are lightweight notifications designed to mimic the push notifications that have been popularized by mobile and desktop operating systems. They’re built with flexbox, so they’re easy to align and position.`}</p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Things to know when using the toast plugin:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Toasts are opt-in for performance reasons, so `}<strong parentName=\"li\">{`you must initialize them yourself`}</strong>{`.`}</li>\n      <li parentName=\"ul\">{`Toasts will automatically hide if you do not specify `}<inlineCode parentName=\"li\">{`autohide: false`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"basic\"\n    }}>{`Basic`}</h3>\n    <p>{`To encourage extensible and predictable toasts, we recommend a header and body. Toast headers use `}<inlineCode parentName=\"p\">{`display: flex`}</inlineCode>{`, allowing easy alignment of content thanks to our margin and flexbox utilities.`}</p>\n    <p>{`Toasts are as flexible as you need and have very little required markup. At a minimum, we require a single element to contain your \"toasted\" content and strongly encourage a dismiss button.`}</p>\n    <Playground __position={0} __code={'<CToaster>\\n  <CToast title=\\\"CoreUI for React.js\\\" autohide={false}>\\n    Hello, world! This is a toast message.\\n  </CToast>\\n</CToaster>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CToast,\n      CToaster,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <CToaster mdxType=\"CToaster\">\n    <CToast title=\"CoreUI for React.js\" autohide={false} mdxType=\"CToast\">Hello, world! This is a toast message.</CToast>\n  </CToaster>\n    </Playground>\n    <Playground __position={1} __code={'() => {\\n  const [toast, addToast] = useState(0)\\n  const toaster = useRef()\\n  return (\\n    <>\\n      <CButton onClick={() => addToast({ title: \\'test\\' })}>\\n        Send a toast\\n      </CButton>\\n      <CToaster ref={toaster} push={toast} placement=\\\"top-start\\\" />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useRef,\n      Playground,\n      Props,\n      CButton,\n      CToast,\n      CToaster,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [toast, addToast] = useState(0);\n        const toaster = useRef();\n        return <>\n        <CButton onClick={() => addToast({\n            'title': 'test'\n          })} mdxType=\"CButton\">Send a toast</CButton>\n        <CToaster ref={toaster} push={toast} placement=\"top-start\" mdxType=\"CToaster\" />\n      </>;\n      }}\n    </Playground>\n    <p>{`aa`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}