(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{FaD7:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return d})),a.d(t,"default",(function(){return f}));var o=a("Fcif"),n=a("+I+c"),s=a("IFzZ"),i=a("/FXl"),r=a("BIGe"),l=a("ZFoC"),u=a("758a"),c=a("9O+I"),b=a("D3pV"),d=(a("aD51"),{});void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/toast/CToast.mdx"}});var p={_frontmatter:d},m=r.a;function f(e){var t,a,f=e.components,y=Object(n.a)(e,["components"]);return Object(i.b)(m,Object(o.a)({},p,y,{components:f,mdxType:"MDXLayout"}),Object(i.b)("p",null,"React toasts are lightweight notifications designed to mimic the push notifications that have been popularized by mobile and desktop operating systems. They’re built with flexbox, so they’re easy to align and position."),Object(i.b)("h2",{id:"overview"},"Overview"),Object(i.b)("p",null,"Things to know when using the toast plugin:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Toasts are opt-in for performance reasons, so ",Object(i.b)("strong",{parentName:"li"},"you must initialize them yourself"),"."),Object(i.b)("li",{parentName:"ul"},"Toasts will automatically hide if you do not specify ",Object(i.b)("inlineCode",{parentName:"li"},"autohide: false"),".")),Object(i.b)("h2",{id:"examples"},"Examples"),Object(i.b)("h3",{id:"basic"},"Basic"),Object(i.b)("p",null,"To encourage extensible and predictable toasts, we recommend a header and body. Toast headers use ",Object(i.b)("inlineCode",{parentName:"p"},"display: flex"),", allowing easy alignment of content thanks to our margin and flexbox utilities."),Object(i.b)("p",null,'Toasts are as flexible as you need and have very little required markup. At a minimum, we require a single element to contain your "toasted" content and strongly encourage a dismiss button.'),Object(i.b)(l.c,{__position:0,__code:'<CToaster>\n  <CToast title="CoreUI for React.js" autohide={false}>\n    Hello, world! This is a toast message.\n  </CToast>\n</CToaster>',__scope:(t={props:y,DefaultLayout:r.a,useState:s.useState,useRef:s.useRef,Playground:l.c,Props:l.d,CButton:u.a,CToast:c.a,CToaster:b.a},t.DefaultLayout=r.a,t._frontmatter=d,t),mdxType:"Playground"},Object(i.b)(b.a,{mdxType:"CToaster"},Object(i.b)(c.a,{title:"CoreUI for React.js",autohide:!1,mdxType:"CToast"},"Hello, world! This is a toast message."))),Object(i.b)(l.c,{__position:1,__code:"() => {\n  const [toast, addToast] = useState(0)\n  const toaster = useRef()\n  return (\n    <>\n      <CButton onClick={() => addToast({ title: 'test' })}>\n        Send a toast\n      </CButton>\n      <CToaster ref={toaster} push={toast} placement=\"top-start\" />\n    </>\n  )\n}",__scope:(a={props:y,DefaultLayout:r.a,useState:s.useState,useRef:s.useRef,Playground:l.c,Props:l.d,CButton:u.a,CToast:c.a,CToaster:b.a},a.DefaultLayout=r.a,a._frontmatter=d,a),mdxType:"Playground"},(function(){var e=Object(s.useState)(0),t=e[0],a=e[1],o=Object(s.useRef)();return Object(i.b)(s.Fragment,null,Object(i.b)(u.a,{onClick:function(){return a({title:"test"})},mdxType:"CButton"},"Send a toast"),Object(i.b)(b.a,{ref:o,push:t,placement:"top-start",mdxType:"CToaster"}))})),Object(i.b)("p",null,"aa"))}void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!f.hasOwnProperty("__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/toast/CToast.mdx"}}),f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-toast-c-toast-mdx-8b1decf88fd257820930.js.map